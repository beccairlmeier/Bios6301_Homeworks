names(funs)
sign(01)
sign(-1)
sign(-19)
funs$sign
funs$sign(01)
formals(sign)
args(sign)
args(rbinom)
length(args(rbinom))
length(args(rbinom)[1])
args(Filter)
args('Filter')
typeof(args("Filter"))
as.list(args("Filter"))
length(args("Filter"))
length(as.list(args("Filter")))
length(as.(args("Filter")))
args("Filter")()
args("Filter")
length(formals(Filter))
argLengths = lapply(funs, function(f) length(formals(f)))
argLengths
which.max(argLengths)
which.max(lapply(funs, function(f) length(formals(f))))
sum(argLengths == 0)
ffvalues <- function(path, file='outfile.csv', nTeams=12, cap=200, posReq=c(qb=1, rb=2, wr=3, te=1, k=1),
points=c(fg=4, xpt=1, pass_yds=1/25, pass_tds=4, pass_ints=-2,
rush_yds=1/10, rush_tds=6, fumbles=-2, rec_yds=1/20, rec_tds=6)) {
## read in CSV files
setwd(path) #Get to the right place.
k  <- read.csv("proj_k15.csv")
qb <- read.csv("proj_qb15.csv")
rb <- read.csv("proj_rb15.csv")
te <- read.csv("proj_te15.csv")
wr <- read.csv("proj_wr15.csv")
k[,'pos']  <- 'k'
qb[,'pos'] <- 'qb'
rb[,'pos'] <- 'rb'
te[,'pos'] <- 'te'
wr[,'pos'] <- 'wr'
# generate unique list of column names
cols <- unique(c(names(k), names(qb), names(rb), names(te), names(wr)))
k[,setdiff(cols, names(k))]   <- 0
qb[,setdiff(cols, names(qb))] <- 0
rb[,setdiff(cols, names(rb))] <- 0
te[,setdiff(cols, names(te))] <- 0
wr[,setdiff(cols, names(wr))] <- 0
#Create one big dataframe.
x <- rbind(k[,cols], qb[,cols], rb[,cols], te[,cols], wr[,cols])
x[,'p_fg']        <- x[,'fg']*points["fg"]
x[,'p_xpt']       <- x[,'xpt']*points["xpt"]
x[,'p_pass_yds']  <- x[,'pass_yds']*points["pass_yds"]
x[,'p_pass_tds']  <- x[,'pass_tds']*points["pass_tds"]
x[,'p_pass_ints'] <- x[,'pass_ints']*points["pass_ints"]
x[,'p_rush_yds']  <- x[,'rush_yds']*points["rush_yds"]
x[,'p_rush_tds']  <- x[,'rush_tds']*points["rush_tds"]
x[,'p_fumbles']   <- x[,'fumbles']*points["fumbles"]
x[,'p_rec_yds']   <- x[,'rec_yds']*points["rec_yds"]
x[,'p_rec_tds']   <- x[,'rec_tds']*points["rec_tds"]
## calculate dollar values
x[,'points'] <- rowSums(x[,grep("^p_", names(x))])
x2 <- x[order(x[,'points'], decreasing=TRUE),]
# determine the row indeces for each position
k.ix  <- which(x2[,'pos']=='k')
qb.ix <- which(x2[,'pos']=='qb')
rb.ix <- which(x2[,'pos']=='rb')
te.ix <- which(x2[,'pos']=='te')
wr.ix <- which(x2[,'pos']=='wr')
# calculate marginal points by subtracting "baseline" player's points
x2[qb.ix, 'marg'] <- ifelse(posReq['qb'] != 0, x2[qb.ix,'points'] - x2[qb.ix[posReq['qb']*nTeams],'points'], -1000)
x2[rb.ix, 'marg'] <- ifelse(posReq['rb'] != 0, x2[rb.ix,'points'] - x2[rb.ix[posReq['rb']*nTeams],'points'], -1000)
x2[wr.ix, 'marg'] <- ifelse(posReq['wr'] != 0, x2[wr.ix,'points'] - x2[wr.ix[posReq['wr']*nTeams],'points'], -1000)
x2[te.ix, 'marg'] <- ifelse(posReq['te'] != 0, x2[te.ix,'points'] - x2[te.ix[posReq['te']*nTeams],'points'], -1000)
x2[k.ix,  'marg'] <- ifelse(posReq['k'] != 0, x2[k.ix, 'points'] - x2[k.ix[posReq['k']*nTeams],  'points'], -1000)
# create a new data.frame subset by non-negative marginal points
x3 <- x2[x2[,'marg'] >= 0,]
# re-order by marginal points
x3 <- x3[order(x3[,'marg'], decreasing=TRUE),]
# reset the row names
rownames(x3) <- NULL
# calculation for player value
x3[,'value'] <- x3[,'marg']*(nTeams*cap-nrow(x3))/sum(x3[,'marg']) + 1
# create a data.frame with more interesting columns
x4 <- x3[,c('PlayerName','pos','points','marg','value')]
x4[,'marg'] <- NULL
## save dollar values as CSV file
write.csv(x4, file)
## return data.frame with dollar values
return(x4)
}
x1 <- ffvalues('.')
# setwd("/Users/Nick/Dropbox/vandy/computing/homework/data")
# path: directory path to input files
# file: name of the output file; it should be written to path
# nTeams: number of teams in league
# cap: money available to each team
# posReq: number of starters for each position
# points: point allocation for each category
ffvalues <- function(path, file='outfile.csv', nTeams=12, cap=200, posReq=c(qb=1, rb=2, wr=3, te=1, k=1),
points=c(fg=4, xpt=1, pass_yds=1/25, pass_tds=4, pass_ints=-2, rush_yds=1/10,
rush_tds=6, fumbles=-2, rec_yds=1/20, rec_tds=6)) {
## read in CSV files
setwd(path) #Get to the right place.
k  <- read.csv("proj_k15.csv")
qb <- read.csv("proj_qb15.csv")
rb <- read.csv("proj_rb15.csv")
te <- read.csv("proj_te15.csv")
wr <- read.csv("proj_wr15.csv")
k[,'pos']  <- 'k'
qb[,'pos'] <- 'qb'
rb[,'pos'] <- 'rb'
te[,'pos'] <- 'te'
wr[,'pos'] <- 'wr'
# generate unique list of column names
cols <- unique(c(names(k), names(qb), names(rb), names(te), names(wr)))
k[,setdiff(cols, names(k))]   <- 0
qb[,setdiff(cols, names(qb))] <- 0
rb[,setdiff(cols, names(rb))] <- 0
te[,setdiff(cols, names(te))] <- 0
wr[,setdiff(cols, names(wr))] <- 0
#Create one big dataframe.
x <- rbind(k[,cols], qb[,cols], rb[,cols], te[,cols], wr[,cols])
x[,'p_fg']        <- x[,'fg']*points["fg"]
x[,'p_xpt']       <- x[,'xpt']*points["xpt"]
x[,'p_pass_yds']  <- x[,'pass_yds']*points["pass_yds"]
x[,'p_pass_tds']  <- x[,'pass_tds']*points["pass_tds"]
x[,'p_pass_ints'] <- x[,'pass_ints']*points["pass_ints"]
x[,'p_rush_yds']  <- x[,'rush_yds']*points["rush_yds"]
x[,'p_rush_tds']  <- x[,'rush_tds']*points["rush_tds"]
x[,'p_fumbles']   <- x[,'fumbles']*points["fumbles"]
x[,'p_rec_yds']   <- x[,'rec_yds']*points["rec_yds"]
x[,'p_rec_tds']   <- x[,'rec_tds']*points["rec_tds"]
## calculate dollar values
x[,'points'] <- rowSums(x[,grep("^p_", names(x))])
x2 <- x[order(x[,'points'], decreasing=TRUE),]
# determine the row indeces for each position
k.ix  <- which(x2[,'pos']=='k')
qb.ix <- which(x2[,'pos']=='qb')
rb.ix <- which(x2[,'pos']=='rb')
te.ix <- which(x2[,'pos']=='te')
wr.ix <- which(x2[,'pos']=='wr')
# calculate marginal points by subtracting "baseline" player's points
x2[qb.ix, 'marg'] <- ifelse(posReq['qb'] != 0, x2[qb.ix,'points'] - x2[qb.ix[posReq['qb']*nTeams],'points'], -1000)
x2[rb.ix, 'marg'] <- ifelse(posReq['rb'] != 0, x2[rb.ix,'points'] - x2[rb.ix[posReq['rb']*nTeams],'points'], -1000)
x2[wr.ix, 'marg'] <- ifelse(posReq['wr'] != 0, x2[wr.ix,'points'] - x2[wr.ix[posReq['wr']*nTeams],'points'], -1000)
x2[te.ix, 'marg'] <- ifelse(posReq['te'] != 0, x2[te.ix,'points'] - x2[te.ix[posReq['te']*nTeams],'points'], -1000)
x2[k.ix,  'marg'] <- ifelse(posReq['k'] != 0, x2[k.ix, 'points'] - x2[k.ix[posReq['k']*nTeams],  'points'], -1000)
# create a new data.frame subset by non-negative marginal points
x3 <- x2[x2[,'marg'] >= 0,]
# re-order by marginal points
x3 <- x3[order(x3[,'marg'], decreasing=TRUE),]
# reset the row names
rownames(x3) <- NULL
# calculation for player value
x3[,'value'] <- x3[,'marg']*(nTeams*cap-nrow(x3))/sum(x3[,'marg']) + 1
# create a data.frame with more interesting columns
x4 <- x3[,c('PlayerName','pos','points','marg','value')]
x4[,'marg'] <- NULL
## save dollar values as CSV file
write.csv(x4, file)
## return data.frame with dollar values
return(x4)
}
x1 <- ffvalues('.')
sum(x1[,'value'] > 20)
x1[x1[,'pos'] == "rb",][15,]
sum(x1[,'value'] > 20)
View(`x1`)
nTeams=12, cap=200, posReq=c(qb=1, rb=2, wr=3, te=1, k=1),
points=c(fg=4, xpt=1, pass_yds=1/25, pass_tds=4, pass_ints=-2, rush_yds=1/10,
rush_tds=6, fumbles=-2, rec_yds=1/20, rec_tds=6)
nTeams=12
cap=200
posReq=c(qb=1, rb=2, wr=3, te=1, k=1)
points=c(fg=4, xpt=1, pass_yds=1/25, pass_tds=4, pass_ints=-2, rush_yds=1/10,
rush_tds=6, fumbles=-2, rec_yds=1/20, rec_tds=6)
k  <- read.csv("proj_k15.csv")
qb <- read.csv("proj_qb15.csv")
rb <- read.csv("proj_rb15.csv")
te <- read.csv("proj_te15.csv")
wr <- read.csv("proj_wr15.csv")
k[,'pos']  <- 'k'
qb[,'pos'] <- 'qb'
rb[,'pos'] <- 'rb'
te[,'pos'] <- 'te'
wr[,'pos'] <- 'wr'
# generate unique list of column names
cols <- unique(c(names(k), names(qb), names(rb), names(te), names(wr)))
k[,setdiff(cols, names(k))]   <- 0
qb[,setdiff(cols, names(qb))] <- 0
rb[,setdiff(cols, names(rb))] <- 0
te[,setdiff(cols, names(te))] <- 0
wr[,setdiff(cols, names(wr))] <- 0
#Create one big dataframe.
x <- rbind(k[,cols], qb[,cols], rb[,cols], te[,cols], wr[,cols])
View(x)
x[,'p_fg']        <- x[,'fg']*points["fg"]
x[,'p_xpt']       <- x[,'xpt']*points["xpt"]
x[,'p_pass_yds']  <- x[,'pass_yds']*points["pass_yds"]
x[,'p_pass_tds']  <- x[,'pass_tds']*points["pass_tds"]
x[,'p_pass_ints'] <- x[,'pass_ints']*points["pass_ints"]
x[,'p_rush_yds']  <- x[,'rush_yds']*points["rush_yds"]
x[,'p_rush_tds']  <- x[,'rush_tds']*points["rush_tds"]
x[,'p_fumbles']   <- x[,'fumbles']*points["fumbles"]
x[,'p_rec_yds']   <- x[,'rec_yds']*points["rec_yds"]
x[,'p_rec_tds']   <- x[,'rec_tds']*points["rec_tds"]
View(x)
x[,'points'] <- rowSums(x[,grep("^p_", names(x))])
x2 <- x[order(x[,'points'], decreasing=TRUE),]
points=c(fg=0, xpt=0, pass_yds=1/25, pass_tds=6, pass_ints=-2,
rush_yds=1/10, rush_tds=6, fumbles=-2, rec_yds=1/20, rec_tds=6)
posReq=c(qb=2, rb=2, wr=3, te=1, k=0)
k  <- read.csv("proj_k15.csv")
qb <- read.csv("proj_qb15.csv")
rb <- read.csv("proj_rb15.csv")
te <- read.csv("proj_te15.csv")
wr <- read.csv("proj_wr15.csv")
k[,'pos']  <- 'k'
qb[,'pos'] <- 'qb'
rb[,'pos'] <- 'rb'
te[,'pos'] <- 'te'
wr[,'pos'] <- 'wr'
# generate unique list of column names
cols <- unique(c(names(k), names(qb), names(rb), names(te), names(wr)))
k[,setdiff(cols, names(k))]   <- 0
qb[,setdiff(cols, names(qb))] <- 0
rb[,setdiff(cols, names(rb))] <- 0
te[,setdiff(cols, names(te))] <- 0
wr[,setdiff(cols, names(wr))] <- 0
#Create one big dataframe.
x <- rbind(k[,cols], qb[,cols], rb[,cols], te[,cols], wr[,cols])
x[,'p_fg']        <- x[,'fg']*points["fg"]
x[,'p_xpt']       <- x[,'xpt']*points["xpt"]
x[,'p_pass_yds']  <- x[,'pass_yds']*points["pass_yds"]
x[,'p_pass_tds']  <- x[,'pass_tds']*points["pass_tds"]
x[,'p_pass_ints'] <- x[,'pass_ints']*points["pass_ints"]
x[,'p_rush_yds']  <- x[,'rush_yds']*points["rush_yds"]
x[,'p_rush_tds']  <- x[,'rush_tds']*points["rush_tds"]
x[,'p_fumbles']   <- x[,'fumbles']*points["fumbles"]
x[,'p_rec_yds']   <- x[,'rec_yds']*points["rec_yds"]
x[,'p_rec_tds']   <- x[,'rec_tds']*points["rec_tds"]
View(x)
x[,'points'] <- rowSums(x[,grep("^p_", names(x))])
x2 <- x[order(x[,'points'], decreasing=TRUE),]
# determine the row indices for each position
k.ix  <- which(x2[,'pos']=='k')
qb.ix <- which(x2[,'pos']=='qb')
rb.ix <- which(x2[,'pos']=='rb')
te.ix <- which(x2[,'pos']=='te')
wr.ix <- which(x2[,'pos']=='wr')
x2[qb.ix, 'marg'] <- ifelse(posReq['qb'] != 0, x2[qb.ix,'points'] - x2[qb.ix[posReq['qb']*nTeams],'points'], -1000)
x2[rb.ix, 'marg'] <- ifelse(posReq['rb'] != 0, x2[rb.ix,'points'] - x2[rb.ix[posReq['rb']*nTeams],'points'], -1000)
x2[wr.ix, 'marg'] <- ifelse(posReq['wr'] != 0, x2[wr.ix,'points'] - x2[wr.ix[posReq['wr']*nTeams],'points'], -1000)
x2[te.ix, 'marg'] <- ifelse(posReq['te'] != 0, x2[te.ix,'points'] - x2[te.ix[posReq['te']*nTeams],'points'], -1000)
x2[k.ix,  'marg'] <- ifelse(posReq['k']  != 0, x2[k.ix, 'points'] - x2[k.ix[posReq['k']*nTeams],  'points'], -1000)
View(x)
View(`x2`)
# create a new data.frame subset by non-negative marginal points
x3 <- x2[x2[,'marg'] >= 0,]
View(`x3`)
# re-order by marginal points
x3 <- x3[order(x3[,'marg'], decreasing=TRUE),]
View(`x3`)
# reset the row names
rownames(x3) <- NULL
x3[,'value'] <- x3[,'marg']*(nTeams*cap-nrow(x3))/sum(x3[,'marg']) + 1
# create a data.frame with more interesting columns
x4 <- x3[,c('PlayerName','pos','points','marg','value')]
View(`x4`)
x2[qb.ix, 'marg'] <- x2[qb.ix,'points'] - x2[qb.ix[posReq['qb']*nTeams],'points']
x2[rb.ix, 'marg'] <- x2[rb.ix,'points'] - x2[rb.ix[posReq['rb']*nTeams],'points']
x2[wr.ix, 'marg'] <- x2[wr.ix,'points'] - x2[wr.ix[posReq['wr']*nTeams],'points']
x2[te.ix, 'marg'] <- x2[te.ix,'points'] - x2[te.ix[posReq['te']*nTeams],'points']
x2[k.ix,  'marg'] <- x2[k.ix, 'points'] - x2[k.ix[posReq['k']*nTeams],  'points']
x2[qb.ix, 'marg'] <- x2[qb.ix,'points'] - x2[qb.ix[posReq['qb']*nTeams],'points']
x2[rb.ix, 'marg'] <- x2[rb.ix,'points'] - x2[rb.ix[posReq['rb']*nTeams],'points']
x2[wr.ix, 'marg'] <- x2[wr.ix,'points'] - x2[wr.ix[posReq['wr']*nTeams],'points']
x2[te.ix, 'marg'] <- x2[te.ix,'points'] - x2[te.ix[posReq['te']*nTeams],'points']
x2[k.ix,  'marg'] <- x2[k.ix, 'points'] - x2[k.ix[posReq['k']*nTeams],  'points']
x2[k.ix[posReq['k']*nTeams],  'points']
ffvalues <- function(path, file='outfile.csv', nTeams=12, cap=200, posReq=c(qb=1, rb=2, wr=3, te=1, k=1),
points=c(fg=4, xpt=1, pass_yds=1/25, pass_tds=4, pass_ints=-2, rush_yds=1/10,
rush_tds=6, fumbles=-2, rec_yds=1/20, rec_tds=6)) {
## read in CSV files
setwd(path) #Get to the right place.
k  <- read.csv("proj_k15.csv")
qb <- read.csv("proj_qb15.csv")
rb <- read.csv("proj_rb15.csv")
te <- read.csv("proj_te15.csv")
wr <- read.csv("proj_wr15.csv")
k[,'pos']  <- 'k'
qb[,'pos'] <- 'qb'
rb[,'pos'] <- 'rb'
te[,'pos'] <- 'te'
wr[,'pos'] <- 'wr'
# generate unique list of column names
cols <- unique(c(names(k), names(qb), names(rb), names(te), names(wr)))
k[,setdiff(cols, names(k))]   <- 0
qb[,setdiff(cols, names(qb))] <- 0
rb[,setdiff(cols, names(rb))] <- 0
te[,setdiff(cols, names(te))] <- 0
wr[,setdiff(cols, names(wr))] <- 0
#Create one big dataframe.
x <- rbind(k[,cols], qb[,cols], rb[,cols], te[,cols], wr[,cols])
x[,'p_fg']        <- x[,'fg']*points["fg"]
x[,'p_xpt']       <- x[,'xpt']*points["xpt"]
x[,'p_pass_yds']  <- x[,'pass_yds']*points["pass_yds"]
x[,'p_pass_tds']  <- x[,'pass_tds']*points["pass_tds"]
x[,'p_pass_ints'] <- x[,'pass_ints']*points["pass_ints"]
x[,'p_rush_yds']  <- x[,'rush_yds']*points["rush_yds"]
x[,'p_rush_tds']  <- x[,'rush_tds']*points["rush_tds"]
x[,'p_fumbles']   <- x[,'fumbles']*points["fumbles"]
x[,'p_rec_yds']   <- x[,'rec_yds']*points["rec_yds"]
x[,'p_rec_tds']   <- x[,'rec_tds']*points["rec_tds"]
## calculate dollar values
x[,'points'] <- rowSums(x[,grep("^p_", names(x))])
x2 <- x[order(x[,'points'], decreasing=TRUE),]
# determine the row indices for each position
k.ix  <- which(x2[,'pos']=='k')
qb.ix <- which(x2[,'pos']=='qb')
rb.ix <- which(x2[,'pos']=='rb')
te.ix <- which(x2[,'pos']=='te')
wr.ix <- which(x2[,'pos']=='wr')
#   # calculate marginal points by subtracting "baseline" player's points
#   x2[qb.ix, 'marg'] <- ifelse(posReq['qb'] != 0, x2[qb.ix,'points'] - x2[qb.ix[posReq['qb']*nTeams],'points'], -1000)
#   x2[rb.ix, 'marg'] <- ifelse(posReq['rb'] != 0, x2[rb.ix,'points'] - x2[rb.ix[posReq['rb']*nTeams],'points'], -1000)
#   x2[wr.ix, 'marg'] <- ifelse(posReq['wr'] != 0, x2[wr.ix,'points'] - x2[wr.ix[posReq['wr']*nTeams],'points'], -1000)
#   x2[te.ix, 'marg'] <- ifelse(posReq['te'] != 0, x2[te.ix,'points'] - x2[te.ix[posReq['te']*nTeams],'points'], -1000)
#   x2[k.ix,  'marg'] <- ifelse(posReq['k']  != 0, x2[k.ix, 'points'] - x2[k.ix[posReq['k']*nTeams],  'points'], -1000)
#
x2[qb.ix, 'marg'] <- x2[qb.ix,'points'] - x2[qb.ix[posReq['qb']*nTeams],'points']
x2[rb.ix, 'marg'] <- x2[rb.ix,'points'] - x2[rb.ix[posReq['rb']*nTeams],'points']
x2[wr.ix, 'marg'] <- x2[wr.ix,'points'] - x2[wr.ix[posReq['wr']*nTeams],'points']
x2[te.ix, 'marg'] <- x2[te.ix,'points'] - x2[te.ix[posReq['te']*nTeams],'points']
x2[k.ix,  'marg'] <- x2[k.ix, 'points'] - x2[k.ix[posReq['k']*nTeams],  'points']
# create a new data.frame subset by non-negative marginal points
x3 <- x2[x2[,'marg'] >= 0,]
# re-order by marginal points
x3 <- x3[order(x3[,'marg'], decreasing=TRUE),]
# reset the row names
rownames(x3) <- NULL
# calculation for player value
x3[,'value'] <- x3[,'marg']*(nTeams*cap-nrow(x3))/sum(x3[,'marg']) + 1
# create a data.frame with more interesting columns
x4 <- x3[,c('PlayerName','pos','points','marg','value')]
x4[,'marg'] <- NULL
## save dollar values as CSV file
write.csv(x4, file)
## return data.frame with dollar values
return(x4)
}
x1 <- ffvalues('.')
sum(x1[,'value'] > 20)
points=c(fg=0, xpt=0, pass_yds=1/25, pass_tds=6, pass_ints=-2,
rush_yds=1/10, rush_tds=6, fumbles=-2, rec_yds=1/20, rec_tds=6)
posReq=c(qb=2, rb=2, wr=3, te=1, k=0)
k  <- read.csv("proj_k15.csv")
qb <- read.csv("proj_qb15.csv")
rb <- read.csv("proj_rb15.csv")
te <- read.csv("proj_te15.csv")
wr <- read.csv("proj_wr15.csv")
k[,'pos']  <- 'k'
qb[,'pos'] <- 'qb'
rb[,'pos'] <- 'rb'
te[,'pos'] <- 'te'
wr[,'pos'] <- 'wr'
# generate unique list of column names
cols <- unique(c(names(k), names(qb), names(rb), names(te), names(wr)))
k[,setdiff(cols, names(k))]   <- 0
qb[,setdiff(cols, names(qb))] <- 0
rb[,setdiff(cols, names(rb))] <- 0
te[,setdiff(cols, names(te))] <- 0
wr[,setdiff(cols, names(wr))] <- 0
#Create one big dataframe.
x <- rbind(k[,cols], qb[,cols], rb[,cols], te[,cols], wr[,cols])
x[,'p_fg']        <- x[,'fg']*points["fg"]
x[,'p_xpt']       <- x[,'xpt']*points["xpt"]
x[,'p_pass_yds']  <- x[,'pass_yds']*points["pass_yds"]
x[,'p_pass_tds']  <- x[,'pass_tds']*points["pass_tds"]
x[,'p_pass_ints'] <- x[,'pass_ints']*points["pass_ints"]
x[,'p_rush_yds']  <- x[,'rush_yds']*points["rush_yds"]
x[,'p_rush_tds']  <- x[,'rush_tds']*points["rush_tds"]
x[,'p_fumbles']   <- x[,'fumbles']*points["fumbles"]
x[,'p_rec_yds']   <- x[,'rec_yds']*points["rec_yds"]
x[,'p_rec_tds']   <- x[,'rec_tds']*points["rec_tds"]
## calculate dollar values
x[,'points'] <- rowSums(x[,grep("^p_", names(x))])
x2 <- x[order(x[,'points'], decreasing=TRUE),]
# determine the row indices for each position
k.ix  <- which(x2[,'pos']=='k')
qb.ix <- which(x2[,'pos']=='qb')
rb.ix <- which(x2[,'pos']=='rb')
te.ix <- which(x2[,'pos']=='te')
wr.ix <- which(x2[,'pos']=='wr')
#   # calculate marginal points by subtracting "baseline" player's points
#   x2[qb.ix, 'marg'] <- ifelse(posReq['qb'] != 0, x2[qb.ix,'points'] - x2[qb.ix[posReq['qb']*nTeams],'points'], -1000)
#   x2[rb.ix, 'marg'] <- ifelse(posReq['rb'] != 0, x2[rb.ix,'points'] - x2[rb.ix[posReq['rb']*nTeams],'points'], -1000)
#   x2[wr.ix, 'marg'] <- ifelse(posReq['wr'] != 0, x2[wr.ix,'points'] - x2[wr.ix[posReq['wr']*nTeams],'points'], -1000)
#   x2[te.ix, 'marg'] <- ifelse(posReq['te'] != 0, x2[te.ix,'points'] - x2[te.ix[posReq['te']*nTeams],'points'], -1000)
#   x2[k.ix,  'marg'] <- ifelse(posReq['k']  != 0, x2[k.ix, 'points'] - x2[k.ix[posReq['k']*nTeams],  'points'], -1000)
#
x2[qb.ix, 'marg'] <- x2[qb.ix,'points'] - x2[qb.ix[posReq['qb']*nTeams],'points']
x2[rb.ix, 'marg'] <- x2[rb.ix,'points'] - x2[rb.ix[posReq['rb']*nTeams],'points']
x2[wr.ix, 'marg'] <- x2[wr.ix,'points'] - x2[wr.ix[posReq['wr']*nTeams],'points']
x2[te.ix, 'marg'] <- x2[te.ix,'points'] - x2[te.ix[posReq['te']*nTeams],'points']
x2[k.ix, 'points']
x2[k.ix[posReq['k']*nTeams],  'points']
x2[k.ix,  'marg'] <- x2[k.ix, 'points'] - as.float(x2[k.ix[posReq['k']*nTeams],  'points'])
x2[k.ix,  'marg'] <- x2[k.ix, 'points'] - as.numeric(x2[k.ix[posReq['k']*nTeams],  'points'])
as.numeric(x2[k.ix[posReq['k']*nTeams],  'points'])
x2[te.ix[posReq['te']*nTeams],'points']
x2[wr.ix[posReq['wr']*nTeams],'points']
x2[rb.ix[posReq['rb']*nTeams],'points']
x2[qb.ix[posReq['qb']*nTeams],'points']
qb.ix[posReq['qb']*nTeams]
x2[qb.ix[posReq['qb']*nTeams],'points']
# create a new data.frame subset by non-negative marginal points
x3 <- x2[x2[,'marg'] >= 0,]
x3 <- x3[order(x3[,'marg'], decreasing=TRUE),]
View(`x3`)
x2[k.ix[posReq['k']*nTeams],  'points']
k.ix
posReq['qb']
nTeams
x2[k.ix,  'marg'] <- x2[k.ix, 'points'] - x2[k.ix[max(1,posReq['k'])*nTeams],  'points']
x3 <- x2[x2[,'marg'] >= 0,]
View(`x3`)
# setwd("/Users/Nick/Dropbox/vandy/computing/homework/data")
# path: directory path to input files
# file: name of the output file; it should be written to path
# nTeams: number of teams in league
# cap: money available to each team
# posReq: number of starters for each position
# points: point allocation for each category
ffvalues <- function(path, file='outfile.csv', nTeams=12, cap=200, posReq=c(qb=1, rb=2, wr=3, te=1, k=1),
points=c(fg=4, xpt=1, pass_yds=1/25, pass_tds=4, pass_ints=-2, rush_yds=1/10,
rush_tds=6, fumbles=-2, rec_yds=1/20, rec_tds=6)) {
## read in CSV files
setwd(path) #Get to the right place.
k  <- read.csv("proj_k15.csv")
qb <- read.csv("proj_qb15.csv")
rb <- read.csv("proj_rb15.csv")
te <- read.csv("proj_te15.csv")
wr <- read.csv("proj_wr15.csv")
k[,'pos']  <- 'k'
qb[,'pos'] <- 'qb'
rb[,'pos'] <- 'rb'
te[,'pos'] <- 'te'
wr[,'pos'] <- 'wr'
# generate unique list of column names
cols <- unique(c(names(k), names(qb), names(rb), names(te), names(wr)))
k[,setdiff(cols, names(k))]   <- 0
qb[,setdiff(cols, names(qb))] <- 0
rb[,setdiff(cols, names(rb))] <- 0
te[,setdiff(cols, names(te))] <- 0
wr[,setdiff(cols, names(wr))] <- 0
#Create one big dataframe.
x <- rbind(k[,cols], qb[,cols], rb[,cols], te[,cols], wr[,cols])
x[,'p_fg']        <- x[,'fg']*points["fg"]
x[,'p_xpt']       <- x[,'xpt']*points["xpt"]
x[,'p_pass_yds']  <- x[,'pass_yds']*points["pass_yds"]
x[,'p_pass_tds']  <- x[,'pass_tds']*points["pass_tds"]
x[,'p_pass_ints'] <- x[,'pass_ints']*points["pass_ints"]
x[,'p_rush_yds']  <- x[,'rush_yds']*points["rush_yds"]
x[,'p_rush_tds']  <- x[,'rush_tds']*points["rush_tds"]
x[,'p_fumbles']   <- x[,'fumbles']*points["fumbles"]
x[,'p_rec_yds']   <- x[,'rec_yds']*points["rec_yds"]
x[,'p_rec_tds']   <- x[,'rec_tds']*points["rec_tds"]
## calculate dollar values
x[,'points'] <- rowSums(x[,grep("^p_", names(x))])
x2 <- x[order(x[,'points'], decreasing=TRUE),]
# determine the row indices for each position
k.ix  <- which(x2[,'pos']=='k')
qb.ix <- which(x2[,'pos']=='qb')
rb.ix <- which(x2[,'pos']=='rb')
te.ix <- which(x2[,'pos']=='te')
wr.ix <- which(x2[,'pos']=='wr')
#   # calculate marginal points by subtracting "baseline" player's points
#   x2[qb.ix, 'marg'] <- ifelse(posReq['qb'] != 0, x2[qb.ix,'points'] - x2[qb.ix[posReq['qb']*nTeams],'points'], -1000)
#   x2[rb.ix, 'marg'] <- ifelse(posReq['rb'] != 0, x2[rb.ix,'points'] - x2[rb.ix[posReq['rb']*nTeams],'points'], -1000)
#   x2[wr.ix, 'marg'] <- ifelse(posReq['wr'] != 0, x2[wr.ix,'points'] - x2[wr.ix[posReq['wr']*nTeams],'points'], -1000)
#   x2[te.ix, 'marg'] <- ifelse(posReq['te'] != 0, x2[te.ix,'points'] - x2[te.ix[posReq['te']*nTeams],'points'], -1000)
#   x2[k.ix,  'marg'] <- ifelse(posReq['k']  != 0, x2[k.ix, 'points'] - x2[k.ix[posReq['k']*nTeams],  'points'], -1000)
x2[qb.ix, 'marg'] <- x2[qb.ix,'points'] - x2[qb.ix[max(1,posReq['qb'])*nTeams],'points']
x2[rb.ix, 'marg'] <- x2[rb.ix,'points'] - x2[rb.ix[max(1,posReq['rb'])*nTeams],'points']
x2[wr.ix, 'marg'] <- x2[wr.ix,'points'] - x2[wr.ix[max(1,posReq['wr'])*nTeams],'points']
x2[te.ix, 'marg'] <- x2[te.ix,'points'] - x2[te.ix[max(1,posReq['te'])*nTeams],'points']
x2[k.ix,  'marg'] <- x2[k.ix, 'points'] -  x2[k.ix[max(1,posReq['k'])*nTeams],  'points']
# create a new data.frame subset by non-negative marginal points
x3 <- x2[x2[,'marg'] >= 0,]
# re-order by marginal points
x3 <- x3[order(x3[,'marg'], decreasing=TRUE),]
# reset the row names
rownames(x3) <- NULL
# calculation for player value
x3[,'value'] <- x3[,'marg']*(nTeams*cap-nrow(x3))/sum(x3[,'marg']) + 1
# create a data.frame with more interesting columns
x4 <- x3[,c('PlayerName','pos','points','marg','value')]
x4[,'marg'] <- NULL
## save dollar values as CSV file
write.csv(x4, file)
## return data.frame with dollar values
return(x4)
}
x1 <- ffvalues('.')
sum(x1[,'value'] > 20)
x3 <- ffvalues('.', 'qbheavy.csv', posReq=c(qb=2, rb=2, wr=3, te=1, k=0),
points=c(fg=0, xpt=0, pass_yds=1/25, pass_tds=6, pass_ints=-2,
rush_yds=1/10, rush_tds=6, fumbles=-2, rec_yds=1/20, rec_tds=6))
View(`x3`)
source('~/.active-rstudio-document', echo=TRUE)
